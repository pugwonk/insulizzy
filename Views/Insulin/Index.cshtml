<!DOCTYPE html>
<html>
<head>
    <title>Insulin Calculator</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/css/styles.css" asp-append-version="true">
</head>
<body>
    <div class="container">
        <h2>Insulin Calculator</h2>

        <!-- Meal Picker -->
        <div class="meal-picker">
            <div class="meal-option" data-meal="Breakfast">Breakfast</div>
            <div class="meal-option" data-meal="Lunch">Lunch</div>
            <div class="meal-option" data-meal="Dinner">Dinner</div>
            <div class="meal-option" data-meal="Supper">Supper</div>
        </div>

        <!-- Input Fields -->
        <table>
            <tr>
                <td class="label">Ratio</td>
                <td id="meal-ratio">1:22</td>
            </tr>
            <tr>
                <td class="label">BG (mmol/L)</td>
                <td><input type="number" id="bgLevel" name="bgLevel" required /></td>
            </tr>
            <tr>
                <td class="label">Meal Carbs (g)</td>
                <td><input type="number" id="mealCarbs" name="mealCarbs" required /></td>
            </tr>
            <tr>
                <td class="label">Insulin</td>
                <td id="insulin">-</td> <!-- Updated by JavaScript -->
            </tr>
            <tr>
                <td class="label">Insulin Rounded</td>
                <td id="roundedInsulin">-</td> <!-- Updated by JavaScript -->
            </tr>
            <tr>
                <td class="label">Insulin Correction</td>
                <td id="insulinCorrection">-</td> <!-- Updated by JavaScript -->
            </tr>
            <tr>
                <td class="label result">Insulin Total</td>
                <td class="result" id="insulinTotal">-</td> <!-- Updated by JavaScript -->
            </tr>
        </table>

        <!-- Add the Calculate Button -->
        <button id="calculateButton">Calculate</button>
    </div>

    <!-- Add walking sprite at the end of your HTML -->
    <img id="walkingSprite" style="width: 48px; height: 48px; position: fixed; bottom: 50px; z-index: 1000; display: none;" />

    <!-- JavaScript Code Here -->
    <script>
        const ratios = {
            "Breakfast": 22,
            "Lunch": 18,
            "Dinner": 15,
            "Supper": 28
        };

        function roundToNearestHalf(num) {
            return Math.round(num * 2) / 2;
        }

        function updateValues() {
            const selectedMeal = document.querySelector('.meal-option.selected');
            if (!selectedMeal) return; // Ensure a meal is selected before calculating

            const meal = selectedMeal.getAttribute("data-meal");
            const bgLevel = parseFloat(document.getElementById("bgLevel").value) || 0;
            const mealCarbs = parseFloat(document.getElementById("mealCarbs").value) || 0;

            // Get the ratio for the selected meal
            const ratio = ratios[meal];
            if (!ratio) return; // Ensure a valid ratio is used
            document.getElementById("meal-ratio").textContent = `1:${ratio}`;

            // Calculate insulin based on carbs and ratio
            const insulin = mealCarbs / ratio;
            const roundedInsulin = roundToNearestHalf(insulin);

            // Example correction logic (adjust as needed)
            const correction = (bgLevel > 10) ? 2.5 : 0;

            // Total insulin to administer
            const insulinTotal = roundedInsulin + correction;

            // Update the display
            document.getElementById("insulin").textContent = insulin.toFixed(2);
            document.getElementById("roundedInsulin").textContent = roundedInsulin.toFixed(1);
            document.getElementById("insulinCorrection").textContent = correction.toFixed(1);
            document.getElementById("insulinTotal").textContent = insulinTotal.toFixed(1);
        }

        function selectMeal(mealElement) {
            const options = document.querySelectorAll('.meal-option');
            options.forEach(opt => opt.classList.remove('selected'));
            mealElement.classList.add('selected');
            updateValues(); // Call updateValues after selecting a meal
        }

        // Ensure everything is set up correctly
        document.addEventListener("DOMContentLoaded", () => {
            document.getElementById("bgLevel").addEventListener("input", updateValues);
            document.getElementById("mealCarbs").addEventListener("input", updateValues);

            const mealOptions = document.querySelectorAll('.meal-option');
            mealOptions.forEach(option => {
                option.addEventListener('click', function () {
                    selectMeal(this);
                });
            });

            // Set a default selection (e.g., "Breakfast")
            mealOptions[0].classList.add('selected');
            updateValues();
        });
    </script>
    <script>
        const spriteElement = document.getElementById("walkingSprite");
        const spriteImages = [
            '/images/sprite-step1.png',
            '/images/sprite-step2.png',
            '/images/sprite-step3.png'
        ];

        function roundToNearestHalf(num) {
            return Math.round(num * 2) / 2;
        }

        function updateValues() {
            const selectedMeal = document.querySelector('.meal-option.selected');
            if (!selectedMeal) return; // Ensure a meal is selected before calculating

            const meal = selectedMeal.getAttribute("data-meal");
            const bgLevel = parseFloat(document.getElementById("bgLevel").value) || 0;
            const mealCarbs = parseFloat(document.getElementById("mealCarbs").value) || 0;

            // Get the ratio for the selected meal
            const ratio = ratios[meal];
            if (!ratio) return; // Ensure a valid ratio is used
            document.getElementById("meal-ratio").textContent = `1:${ratio}`;

            // Calculate insulin based on carbs and ratio
            const insulin = mealCarbs / ratio;
            const roundedInsulin = roundToNearestHalf(insulin);

            // Example correction logic (adjust as needed)
            const correction = (bgLevel > 10) ? 2.5 : 0;

            // Total insulin to administer
            const insulinTotal = roundedInsulin + correction;

            // Update the display
            document.getElementById("insulin").textContent = insulin.toFixed(2);
            document.getElementById("roundedInsulin").textContent = roundedInsulin.toFixed(1);
            document.getElementById("insulinCorrection").textContent = correction.toFixed(1);
            document.getElementById("insulinTotal").textContent = insulinTotal.toFixed(1);
        }

        function selectMeal(mealElement) {
            const options = document.querySelectorAll('.meal-option');
            options.forEach(opt => opt.classList.remove('selected'));
            mealElement.classList.add('selected');
            updateValues();
        }

        function animateSpriteToInsulin() {
            let positionX = -50; // Start off-screen to the left
            let frameIndex = 0;
            spriteElement.style.display = "block";
            spriteElement.src = spriteImages[0]; // Set initial frame

            // Determine the vertical position to align with the "Insulin" field
            const insulinField = document.getElementById("insulin").getBoundingClientRect();
            spriteElement.style.top = `${insulinField.top + window.scrollY - 15}px`; // Adjust to align properly

            function moveSprite() {
                // Move the sprite towards the "Insulin" field
                positionX += 5; // Adjust speed for smoother movement
                spriteElement.style.left = `${positionX}px`;

                // Change sprite frame every 100ms
                if (positionX % 20 === 0) {
                    frameIndex = (frameIndex + 1) % spriteImages.length;
                    spriteElement.src = spriteImages[frameIndex];
                }

                // Stop and position at the "Insulin" field when close
                const spriteRect = spriteElement.getBoundingClientRect();
                if (positionX < (insulinField.left - spriteRect.width - 20)) {
                    requestAnimationFrame(moveSprite); // Continue moving until aligned
                } else {
                    spriteElement.style.display = "none"; // Hide once finished
                }
            }

            requestAnimationFrame(moveSprite);
        }

        document.getElementById("calculateButton").addEventListener("click", () => {
            updateValues(); // Perform calculations
            animateSpriteToInsulin(); // Trigger sprite animation
        });

        // Ensure everything is set up correctly
        document.addEventListener("DOMContentLoaded", () => {
            document.getElementById("bgLevel").addEventListener("input", updateValues);
            document.getElementById("mealCarbs").addEventListener("input", updateValues);

            const mealOptions = document.querySelectorAll('.meal-option');
            mealOptions.forEach(option => {
                option.addEventListener('click', function () {
                    selectMeal(this);
                });
            });

            // Set a default selection (e.g., "Breakfast")
            mealOptions[0].classList.add('selected');
            updateValues();
        });
    </script>


</body>
</html>
