<!DOCTYPE html>
<html>
<head>
    <title>Insulin Calculator</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/css/styles.css" asp-append-version="true">
</head>
<body>
    <div class="container">
        <h2>Insulin Calculator</h2>

        <!-- Meal Picker -->
        <div class="meal-picker">
            <div class="meal-option" data-meal="Breakfast">Breakfast</div>
            <div class="meal-option" data-meal="Lunch">Lunch</div>
            <div class="meal-option" data-meal="Dinner">Dinner</div>
            <div class="meal-option" data-meal="Supper">Supper</div>
        </div>

        <!-- Input Fields -->
        <table>
            <tr>
                <td class="label">Ratio</td>
                <td id="meal-ratio">1:22</td> <!-- Default value shown here -->
            </tr>
            <tr>
                <td class="label">BG (mmol/L)</td>
                <td><input type="number" id="bgLevel" name="bgLevel" required /></td>
            </tr>
            <tr>
                <td class="label">Meal Carbs (g)</td>
                <td><input type="number" id="mealCarbs" name="mealCarbs" required /></td>
            </tr>
            <tr>
                <td class="label">Insulin</td>
                <td id="insulin">-</td> <!-- Updated by JavaScript -->
            </tr>
            <tr>
                <td class="label">Insulin Rounded</td>
                <td id="roundedInsulin">-</td> <!-- Updated by JavaScript -->
            </tr>
            <tr>
                <td class="label">Insulin Correction</td>
                <td id="insulinCorrection">-</td> <!-- Updated by JavaScript -->
            </tr>
            <tr>
                <td class="label result">Insulin Total</td>
                <td class="result" id="insulinTotal">-</td> <!-- Updated by JavaScript -->
            </tr>
        </table>
    </div>
    <div id="walkingSprite" class="walking-sprite walk-frame-1"></div>

    <!-- JavaScript Code Here -->
    <script>
        const ratios = {
            "Breakfast": 22,
            "Lunch": 18,
            "Dinner": 15,
            "Supper": 28
        };

        function roundToNearestHalf(num) {
            return Math.round(num * 2) / 2;
        }

        function updateValues() {
            const selectedMeal = document.querySelector('.meal-option.selected');
            if (!selectedMeal) return; // Ensure a meal is selected before calculating

            const meal = selectedMeal.getAttribute("data-meal");
            const bgLevel = parseFloat(document.getElementById("bgLevel").value) || 0;
            const mealCarbs = parseFloat(document.getElementById("mealCarbs").value) || 0;

            // Get the ratio for the selected meal
            const ratio = ratios[meal];
            if (!ratio) return; // Ensure a valid ratio is used
            document.getElementById("meal-ratio").textContent = `1:${ratio}`;

            // Calculate insulin based on carbs and ratio
            const insulin = mealCarbs / ratio;
            const roundedInsulin = roundToNearestHalf(insulin);

            // Example correction logic (adjust as needed)
            const correction = (bgLevel > 10) ? 2.5 : 0;

            // Total insulin to administer
            const insulinTotal = roundedInsulin + correction;

            // Update the display
            document.getElementById("insulin").textContent = insulin.toFixed(2);
            document.getElementById("roundedInsulin").textContent = roundedInsulin.toFixed(1);
            document.getElementById("insulinCorrection").textContent = correction.toFixed(1);
            document.getElementById("insulinTotal").textContent = insulinTotal.toFixed(1);
        }

        function selectMeal(mealElement) {
            const options = document.querySelectorAll('.meal-option');
            options.forEach(opt => opt.classList.remove('selected'));
            mealElement.classList.add('selected');
            updateValues(); // Call updateValues after selecting a meal
        }

        // Ensure everything is set up correctly
        document.addEventListener("DOMContentLoaded", () => {
            document.getElementById("bgLevel").addEventListener("input", updateValues);
            document.getElementById("mealCarbs").addEventListener("input", updateValues);

            const mealOptions = document.querySelectorAll('.meal-option');
            mealOptions.forEach(option => {
                option.addEventListener('click', function () {
                    selectMeal(this);
                });
            });

            // Set a default selection (e.g., "Breakfast")
            mealOptions[0].classList.add('selected');
            updateValues();
        });
    </script>
    <script>
        function triggerWalkingSprite() {
            const sprite = document.getElementById("walkingSprite");

            // Show the sprite with animation
            sprite.classList.add("animated");

            // Hide the sprite after the animation completes (adjust time as needed)
            setTimeout(() => {
                sprite.classList.remove("animated");
            }, 15000); // Matches the 15s duration of the walkAcross animation
        }

        // Function to randomly trigger the animation occasionally
        function occasionalSpriteWalk() {
            const randomTime = Math.floor(Math.random() * 600) + 300; // Between 30s to 1min
            setTimeout(() => {
                triggerWalkingSprite();
                occasionalSpriteWalk(); // Recursively schedule next walk
            }, randomTime);
        }

        // Start the occasional walk when the page loads
        document.addEventListener("DOMContentLoaded", occasionalSpriteWalk);
    </script>

</body>
</html>
